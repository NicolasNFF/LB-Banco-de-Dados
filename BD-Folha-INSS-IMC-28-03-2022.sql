DROP DATABASE IF EXISTS FOLHA;
CREATE DATABASE FOLHA;
GO
USE FOLHA;
GO
CREATE TABLE FOL_FUNCIONARIO(
FUN_IN_CODIGO INT NOT NULL IDENTITY CONSTRAINT FOL_FK_FUNCIONARIO PRIMARY KEY,
FUN_ST_NOME VARCHAR(100) NOT NULL,
FUN_RE_SALARIO NUMERIC(10,2) NOT NULL CONSTRAINT FOL_DF_FUN_SALARIO DEFAULT 0 CONSTRAINT FOL_CK_FUN_SALARIO CHECK (FUN_RE_SALARIO >=0),
FUN_RE_PESO NUMERIC(5,2) NOT NULL CONSTRAINT FOL_DF_FUN_PESO DEFAULT 0 CONSTRAINT FOL_CK_FUN_PESO CHECK (FUN_RE_PESO BETWEEN 0 AND 300),
FUN_RE_ALTURA NUMERIC(3,2) NOT NULL CONSTRAINT FOL_DF_FUN_ALTURA DEFAULT 0 CONSTRAINT FOL_CK_FUN_ALTURA CHECK (FUN_RE_ALTURA BETWEEN 0 AND 2.50),
FUN_RE_ADMISSAO DATE NOT NULL
);
SET NOCOUNT ON;
INSERT INTO FOL_FUNCIONARIO VALUES
('ALBERTO GASPAR',3540.99,85,1.72,'2014-08-01'),
('LUANA SILVA LOPES',4540.72,52,1.63,'2018-07-12'),
('APARECIDO SEGATO',9540.72,72,1.74,'2010-02-19'),
('HUMBERTO PAZ JR',3548.29,145,1.74,'2014-03-22');
GO

/*********************************************
* FUNÇÃO CÁLCULO INSS
* Autor: Seu nome
* Data: 21/03/2022
* Versão: 1.0
* Sobre: Calcula o valor do INSS conforme a
* legislação corrente
********************************************/


CREATE TABLE FOL_INSS(
INS_IN_CODIGO INT NOT NULL IDENTITY 
              CONSTRAINT FOL_PK_INSS PRIMARY KEY,
INS_DT_INICIO DATE NOT NULL,
INS_RE_INICIAL NUMERIC(10,2) NOT NULL
      CONSTRAINT FOL_CK_INICIAL CHECK (INS_RE_INICIAL >= 0),
INS_RE_FINAL NUMERIC(10,2) NOT NULL
      CONSTRAINT FOL_CK_FINAL CHECK (INS_RE_FINAL >= 0)
 CONSTRAINT FOL_UK_FINAL UNIQUE (INS_DT_INICIO, INS_RE_FINAL),
INS_RE_ALIQUOTA NUMERIC (4,2) NOT NULL
     CONSTRAINT FOL_CK_ALIQUOTA CHECK (INS_RE_ALIQUOTA >= 0),
INS_RE_TETO NUMERIC(10,2) NOT NULL 
     CONSTRAINT FOL_DF_TETO DEFAULT 0
     CONSTRAINT FOL_CK_TETO CHECK (INS_RE_TETO >= 0)
); 
/* DADOS DO INSS 01/2022 */
INSERT INTO FOL_INSS VALUES ('2022-01-01',0,1212,7.5,0);
INSERT INTO FOL_INSS VALUES ('2022-01-01',1212.01,2427.35,9.0,0);
INSERT INTO FOL_INSS VALUES ('2022-01-01',2427.36,3641.03,12.0,0);
INSERT INTO FOL_INSS VALUES ('2022-01-01',3641.04,7087.22,14.0,992.21);
INSERT INTO FOL_INSS VALUES ('2022-01-01',7087.23,999999.99,14.0,992.21);

/* DADOS DO INSS 01/2021 */
INSERT INTO FOL_INSS VALUES ('2021-01-01',0,1100,7.5,0);
INSERT INTO FOL_INSS VALUES ('2021-01-01',1100.01,2203.48,9.0,0);
INSERT INTO FOL_INSS VALUES ('2021-01-01',2203.49,3305.22,12.0,0);
INSERT INTO FOL_INSS VALUES ('2021-01-01',3305.23,6433.57,14.0,900.70);
INSERT INTO FOL_INSS VALUES ('2021-01-01',6433.58,999999.99,14.0,900.70);
GO

CREATE OR ALTER FUNCTION VALORINSS(@salario NUMERIC(10,2)) 
RETURNS NUMERIC(10,2) AS
BEGIN
  --Declarando variaveis
  DECLARE @inss NUMERIC(10,2)
  DECLARE @aliquota NUMERIC(4,2)
  DECLARE @tetoimposto NUMERIC(10,2)
  --Inicializando as variaveis
  SET @inss = 0
  SET @aliquota = 0
  SELECT @tetoimposto = MAX(INS_RE_TETO) FROM FOL_INSS
  WHERE INS_DT_INICIO <= GETDATE()

  SELECT @aliquota = INS_RE_ALIQUOTA FROM FOL_INSS
  WHERE @salario BETWEEN INS_RE_INICIAL AND INS_RE_FINAL AND
      INS_DT_INICIO = (SELECT MAX(INS_DT_INICIO) FROM FOL_INSS
                       WHERE INS_DT_INICIO <= GETDATE())
 SET @inss = (@salario * (@aliquota / 100))					     
 IF (@inss > @tetoimposto)
    BEGIN
	  SET @inss = @tetoimposto
	END
RETURN @inss
END

GO

select dbo.VALORINSS(5000);

select
	FUN_ST_NOME,
	FUN_RE_SALARIO,
	dbo.VALORINSS(FUN_RE_SALARIO) AS INSS
from
FOL_FUNCIONARIO

CREATE OR ALTER FUNCTION  IMC
(@peso numeric(5,2),
@altura numeric(3,2)) 
RETURNS VARCHAR(30) AS
BEGIN

--DECLARANDO AS VARIAVEIS
DECLARE @resultado  VARCHAR(30)
DECLARE @calculoIMC numeric(5,2)

SET @calculoIMC = (@peso / POWER(@altura,2));
SET @resultado =
	CASE
	WHEN @calculoIMC <18.5 THEN 'abaixo do Peso'
	WHEN @calculoIMC >= 18.5 AND
		@calculoIMC <= 24.9 THEN 'Peso Normal'
	WHEN @calculoIMC >= 25.0 AND
		 @calculoIMC <= 29.9 THEN 'Sobrepeso'
	WHEN @calculoIMC >= 30.0 AND
		 @calculoIMC <= 34.9 THEN 'Obesidade Grau I'
	WHEN @calculoIMC >= 35.0 AND
		 @calculoIMC <= 39.9 THEN 'Obesidade Grau II'
	WHEN @calculoIMC >= 40.0 THEN 'Obsesidade Morbida'
	ELSE 'Não Foi possivel calcular o IMC'
   END
   RETURN @resultado

	END

GO
--Testando a função
select dbo.IMC(80,1.71)

select
	FUN_ST_NOME AS 'Nome',
	FUN_RE_PESO AS 'Peso',
	FUN_RE_ALTURA AS 'Altura',
	DBO.IMC(FUN_RE_PESO, FUN_RE_ALTURA) AS 'IMC'
from
FOL_FUNCIONARIO



EXEMPLO 2 

CREATE DATABASE VENDAS;
GO
USE VENDAS;
CREATE TABLE VEN_CLIENTE(
CLI_IN_CODIGO INT NOT NULL IDENTITY
	CONSTRAINT VEN_PK_CLIENTE PRIMARY KEY,
CLI_ST_NOME VARCHAR (100) NOT NULL,
CLI_DT_ULTIMOPEDIDO SMALLDATETIME NULL
);
INSERT INTO VEN_CLIENTE(CLI_ST_NOME) VALUES
('Jose Maria'),('Maria Jose'),('Oswaldo Silva');


CREATE TABLE VEN_PEDIDO(
PED_IN_CODIGO INT NOT NULL IDENTITY
	CONSTRAINT VEN_PK_PEDIDO PRIMARY KEY,
PED_DT_EMISSAO SMALLDATETIME
	CONSTRAINT VEN_DF_PED_EMISSAO DEFAULT GETDATE(),
CLI_INT_CODIGO INT NOT NULL CONSTRAINT VEN_FK_PED_CLI
	FOREIGN KEY REFERENCES VEN_CLIENTE);

SELECT * FROM VEN_CLIENTE;
SELECT * FROM VEN_PEDIDO;

GO
CREATE TRIGGER TR_ULTIMOPEDIDO ON VEN_PEDIDO
-- DEFINIMOS QUE TRIGGER MONITORARA O INSERT E UPDATE
FOR INSERT, UPDATE AS
--CRIAMOS AS VARIAVEIS
DECLARE @cliente int
DECLARE @ultimopedido smalldatetime
--OBTENDO OS VALORES DA TABELA TEMPORARIA INSERTED
SELECT @cliente = CLI_INT_CODIGO,
       @ultimopedido = PED_DT_EMISSAO
FROM  inserted
--VAMOS ALTERAR A TABELA DE CLIENTES
UPDATE VEN_CLIENTE SET CLI_DT_ULTIMOPEDIDO = @ultimopedido
WHERE CLI_IN_CODIGO = @cliente
--FIM TRIGGER

SELECT * FROM VEN_PEDIDO;
SET DATEFORMAT YMD
INSERT INTO VEN_PEDIDO (PED_DT_EMISSAO, CLI_INT_CODIGO)
VALUES ('2022-03-27',1);
SELECT * FROM VEN_CLIENTE;

INSERT INTO VEN_PEDIDO (CLI_INT_CODIGO) VALUES (2);
SELECT * FROM VEN_CLIENTE;


